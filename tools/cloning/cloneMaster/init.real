#!/usr/bin/python
import sys
import os
import dbRbhus
import constants
import socket
import platform



myip = socket.gethostbyname(socket.gethostname())
db_conn = dbRbhus.dbRbhusHost()
try:
  cInfo = db_conn.execute("select * from clonedb where ip='"+ str(myip) +"'",dictionary=True)[-1]
except:
  print("failed aquiring system details : "+ str(sys.exc_info()))
  sys.exit(1)

if(not cInfo):
  print("no host info available . quitting management process")
  sys.exit(0)

cloneType = cInfo['cloneType']
cType = constants.cloneType[cloneType]
clone = cInfo['clone']

if(not clone or not cType):
  sys.exit(0)


def updateCloneStatus(status):
  dbconn = dbRbhus.dbRbhusHost()
  try:
    dbconn.execute("update clonedb set cloneStatus="+ str(status) +" where ip='"+ str(myip) +"'")
  except:
    print("failed updating cloneStatus to "+ str(status) +" : "+ str(sys.exc_info()))
    sys.exit(1)

def getMacAddress():
  for line in os.popen("ifconfig"):
    if line.find('Ether') > -1:
      mac = line.split()[4]
      return mac


def updateGrub():
  os.system("echo \""+ cInfo['grubInstall'] +"\" > /mnt/realroot/tmp/grub.disk")
  if(str(platform.dist()[0]).upper() == 'GENTOO'):
    os.system("cp -avf /mnt/cloneMaster/config/grub.Gentoo /mnt/realroot/etc/default/grub")
  if(str(platform.dist()[0]).upper() == 'UBUNTU'):
    os.system("cp -avf /mnt/cloneMaster/config/grub.Ubuntu /mnt/realroot/etc/default/grub")


  os.system("chroot /mnt/realroot/ < /mnt/cloneMaster/config/chroot/chroot."+ cType +"")


def grubSetDefault(title):
  os.system("echo \""+ title +"\" > /mnt/realroot/tmp/grub.setDefault")
  os.system("chroot /mnt/realroot/ < /mnt/cloneMaster/config/chroot/chroot.grubSetDefault")


def mountSysPaths():
  os.system("mount -t proc none /mnt/realroot/proc")
  os.system("mount --rbind /dev /mnt/realroot/dev")
  os.system("mount --rbind /sys /mnt/realroot/sys")


# check if anything is initiated! . if not exit gracefully

if((cInfo['cloneStatus'] != constants.cloneStatusPending) and (cInfo['cloneStatus'] != constants.cloneStatusRunning)):
  print("nothing to do")
  sys.exit(0)

updateCloneStatus(constants.cloneStatusRunning)



if(not os.path.exists(cInfo['cloneDisk'])):
  updateCloneStatus(constants.cloneStatusFail)
  sys.exit(1)




maccy = getMacAddress()
print(maccy.replace(":","-"))
myPxebootDefault = "/mnt/pxeboot/default.linux"
myPxebootFile = "/mnt/pxeboot/01-"+ maccy.replace(":","-")
myPxebootFlag = "/mnt/pxeboot/bootT-"+ maccy.replace(":","-") #If this file is present go to the next step of making filesystems on partitions
os.system("mkdir -p /mnt/gentoo/")
os.system("mkdir -p /mnt/pxeboot/")
os.system("mkdir -p /mnt/cloneMaster/")
os.system("mount "+ cInfo['cloneServer'] +":"+ cInfo['cloneDir'] +" /mnt/gentoo")
os.system("mount "+ cInfo['cloneServer'] +":"+ cInfo['cloneRootDir'] +" /mnt/cloneMaster")
os.system("mount "+ cInfo['tftpServer'] +":"+ cInfo['tftpDir'] +" /mnt/pxeboot/")
os.system("umount -f "+ cInfo['cloneDisk'] +"*")



if(clone == constants.cloneGrubUpdate):
  mountsys = os.system("/mnt/cloneMaster/init.mount."+ cType +" "+ cInfo['cloneDisk'] +"")
  mountSysPaths()
  if(mountsys != 0):
    print("problem mounting system dirs")
    os.system("rm -fv "+ str(myPxebootFile))
    os.system("reboot -f")
  updateGrub()
  
  menus = os.popen("grep ^menuentry /mnt/realroot/boot/grub/grub.cfg | gawk -F \"'\" '{print $2}'","r")
  menuenties = [x.rstrip().lstrip() for x in menus.readlines()]
  for x in menuenties:
    if(x.lower().find(cInfo['bootDefault']) >= 0):
      grubSetDefault(x)
      break
  updateCloneStatus(constants.cloneStatusDone)
  os.system("rm -f "+ str(myPxebootFile))
  os.system("sync;reboot -f")
elif(clone == constants.cloneClone):
  if(not os.path.exists(myPxebootFlag)):
    os.system("fdisk "+ cInfo['cloneDisk'] +" < /mnt/cloneMaster/config/fdisk/fdisk.del."+ cType +"")
    os.system("fdisk "+ cInfo['cloneDisk'] +" < /mnt/cloneMaster/config/fdisk/fdisk.init."+ cType +".mkextended")
    os.system("fdisk "+ cInfo['cloneDisk'] +" < /mnt/cloneMaster/config/fdisk/fdisk.init."+ cType +".part")
    os.system("touch "+ myPxebootFlag)
    os.system("cp -v "+ myPxebootDefault +" "+ myPxebootFile)
    os.system("cd /;umount -fr /mnt/gentoo;umount -fr /mnt/pxeboot/")
    os.system("sync;reboot -f")
  else:
    os.system("/mnt/cloneMaster/init.mkfs."+ cType +" "+ cInfo['cloneDisk'] +"")
    os.system("/mnt/cloneMaster/init.mount."+ cType +" "+ cInfo['cloneDisk'] +"")
    os.system("rsync -avHAX /mnt/gentoo/ /mnt/realroot/ --delete --exclude=root/livecd --compress")
    os.system("mkdir -pv /mnt/realroot/crap/cache/fscache/")
    os.system("mkdir -m 0777 -p /mnt/realroot/crap/cache/fscache/")
    os.system("cd /")
    os.system("rm -f "+ myPxebootFlag)
    os.system("rm -f "+ str(myPxebootFile))
    mountSysPaths()
  #	os.system("mount /dev"+ cInfo['cloneDisk'] +"5 /mnt/realroot/boot")
    os.system("echo \""+ cInfo['grubInstall'] +"\" > /mnt/realroot/tmp/grub.disk")
    os.system("chroot /mnt/realroot/ < /mnt/cloneMaster/config/chroot/chroot."+ cType +"")
    os.system("cd /; cat /proc/mounts | grep -i realroot | gawk '{print $2}' | sort -ru | xargs umount -f ")
    os.system("rm -f "+ str(myPxebootFile))
    updateCloneStatus(constants.cloneStatusDone)
    os.system("sync;reboot -f")
